@model MedicalFourm.Models.Users

@{
    ViewBag.Title = "EditProfile";
}


@using (Html.BeginForm("EditProfile", "Account", FormMethod.Post, new {onsubmit ="return myFunction()" }))
{
  
    
    <div class="form-horizontal">
        <h4>Users</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(x=>x.DateOfBirth)
        @Html.HiddenFor(x=>x.Email)


        <div class="form-group">
           
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.EditorFor(model => model.FirstName, ViewBag.Readonly ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, ViewBag.Readonly ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control" } })
                 @*@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.username, ViewBag.Readonly ? (object)new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>
  

  

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("No Of Questions", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <a href="@Url.Action("Index", "Questions")">@ViewBag.Question</a> 
              
            </div>
        </div>
        <div class="form-group">
            @Html.Label("No Of Answer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <a href="@Url.Action("ShowAnswer", "Questions")">@ViewBag.Answer</a> 

            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <span><label class="control-label" id="isimError" style="color:red"></label></span>
                <input  type="submit" @*onclick="myFunction()"*@ value="Submit" />
            </div>
        </div>
    </div>
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    function myFunction() {
        var ok = false;
        
        var pass = document.getElementById("Password").value;
        var cnfpass = document.getElementById("ConfirmPassword").value;
        if (pass != cnfpass) {
           
            $("#isimError").text("Password Donot match");

        }
        else {
            $("#isimError").text("");
            if (pass != "") {
                
                var regex = /^(?=.*\d)[A-Za-z\d]{6,8}$/;
                //var regex1 = new RegExp(regex);
                //console.log(regex);
                //console.log(regex1.test(pass));
                if (!regex.test(pass)) {
                    
                    $("#isimError").text("Password should be between 6-8 characters and contain a number");
                }
                else {
                   
                    $("#isimError").text("");
                    ok = true;
                   
                }
            }
          
            

        }
        return ok;
    }
</script>